/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.CourseInstructorBLL;
import DTO.CourseInstructorDTO;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lộc
 */
public class ManageInstructor extends javax.swing.JFrame {

    private DefaultTableModel modelInstructor = new DefaultTableModel();
    private DefaultTableModel resOfSearch;
    private ArrayList<CourseInstructorDTO> listSearch = new ArrayList<CourseInstructorDTO>();
    private CourseInstructorBLL instructorbll = new CourseInstructorBLL();
    private int selectedRow = -1;
    private CourseInstructorDTO oldInstructor = new CourseInstructorDTO();

    /**
     * Creates new form ManageGrade
     */
    public ManageInstructor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txCourseID = new javax.swing.JTextField();
        txPersonID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btOnline = new javax.swing.JButton();
        btOnsite = new javax.swing.JButton();
        btPerson = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btSearch = new javax.swing.JButton();
        btNew = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btAll = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbInstructor = new javax.swing.JTable();
        btClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ PHÂN CÔNG GIẢNG DẠY");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Mã khoá học");

        txCourseID.setEditable(false);

        txPersonID.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Mã giảng viên");

        btOnline.setText("ONLINE");
        btOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOnlineActionPerformed(evt);
            }
        });

        btOnsite.setText("ONSITE");
        btOnsite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOnsiteActionPerformed(evt);
            }
        });

        btPerson.setText("...");
        btPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPersonActionPerformed(evt);
            }
        });

        btAdd.setText("THÊM");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btSearch.setText("TÌM");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btNew.setText("TẠO MỚI");
        btNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNewActionPerformed(evt);
            }
        });

        btDelete.setText("XOÁ");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btAll.setText("TẤT CẢ");
        btAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAllActionPerformed(evt);
            }
        });

        btEdit.setText("SỬA");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btSave.setText("LƯU");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        btCancel.setText("HUỶ");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        tbInstructor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã khoá học", "Mã giảng viên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbInstructor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbInstructorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbInstructor);

        btClose.setText("ĐÓNG");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(txPersonID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPerson))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btOnline)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btOnsite))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btCancel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(214, 214, 214)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(btDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btClose)
                .addGap(295, 295, 295))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btOnline)
                        .addComponent(btOnsite)
                        .addComponent(btAdd)
                        .addComponent(btSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btEdit)
                        .addComponent(btAll)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDelete)
                    .addComponent(btNew))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancel)
                    .addComponent(btSave))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btClose)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btSave.setVisible(false);
        btCancel.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void List() throws Exception {
        if (instructorbll.getList() == null) {
            instructorbll.list();
        }
        ArrayList<CourseInstructorDTO> list = instructorbll.getList();
        Vector header = new Vector();
        header.add("Mã khoá học");
        header.add("Mã giảng viên");
        if (modelInstructor.getRowCount() == 0) {
            modelInstructor = new DefaultTableModel(header, 0);
        }
        for (CourseInstructorDTO p : list) {
            Vector row = new Vector();
            row.add(p.getCourseID());
            row.add(p.getPersonID());
            modelInstructor.addRow(row);
        }
        tbInstructor.setModel(modelInstructor);
    }

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btCloseActionPerformed

    private void btAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAllActionPerformed
        if (instructorbll.getList().size() > 0) {
            tbInstructor.setModel(modelInstructor);
        }
        listSearch.clear();
    }//GEN-LAST:event_btAllActionPerformed

    private void btNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNewActionPerformed
        txCourseID.setText("");
        txPersonID.setText("");
    }//GEN-LAST:event_btNewActionPerformed

    private boolean Validate() throws Exception {
        String person, course;					//S1
        course = txCourseID.getText();			//S2
        person = txPersonID.getText();			//S3

        if (person.equals("") || course.equals("")) {		//C1
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đủ thông tin","Chú ý!",JOptionPane.INFORMATION_MESSAGE);//S4
            return false; //S5
        }

        for (CourseInstructorDTO p : instructorbll.getList()) { //C2
            if (course.equals(String.valueOf(p.getCourseID())) //C3
                    && person.equals(String.valueOf(p.getPersonID()))) {
                JOptionPane.showMessageDialog(null, "Bộ dữ liệu đã tồn tại","Chú ý!",JOptionPane.INFORMATION_MESSAGE); //S5
                return false;//S6
            }
        }
        return true;//S7
    }

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        try {
            if (!Validate()) {
                return;
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }

        CourseInstructorDTO p = new CourseInstructorDTO();
        p.setPersonID(Integer.parseInt(txPersonID.getText()));
        p.setCourseID(Integer.parseInt(txCourseID.getText()));
        try {
            instructorbll.Add(p);
        } catch (Exception ex) {
            System.out.println(ex);
        }

        Vector row = new Vector();
        row.add(p.getCourseID());
        row.add(p.getPersonID());

        modelInstructor.addRow(row);

        tbInstructor.setModel(modelInstructor);
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        int selectedRow = tbInstructor.getSelectedRow();
        if (instructorbll.getList().size() > 0) {
            try {
                instructorbll.Remove(instructorbll.getList().get(selectedRow).getCourseID(),
                        instructorbll.getList().get(selectedRow).getPersonID());
            } catch (Exception ex) {
                System.out.println(ex);
            }
            modelInstructor.removeRow(selectedRow);
            tbInstructor.setModel(modelInstructor);
            this.btNewActionPerformed(evt);
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        if (instructorbll.getList().isEmpty()) {
            return;
        }
        String course, person;
        course = txCourseID.getText();
        person = txPersonID.getText();

        try {
            listSearch = instructorbll.Search(course, person);
        } catch (Exception ex) {
            System.out.println(ex);
        }

        if (listSearch.size() == 0) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả nào!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            tbInstructor.setModel(modelInstructor);
        } else {
            Vector header = new Vector();
            header.add("Mã khoá học");
            header.add("Mã giảng viên");
            resOfSearch = new DefaultTableModel(header, 0);
            for (CourseInstructorDTO p : listSearch) {
                Vector row = new Vector();
                row.add(p.getCourseID());
                row.add(p.getPersonID());
                resOfSearch.addRow(row);
            }
            tbInstructor.setModel(resOfSearch);
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        selectedRow = tbInstructor.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Chọn kết quả cần chỉnh sửa", "Chú ý!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        oldInstructor.setCourseID(instructorbll.getList().get(selectedRow).getCourseID());
        oldInstructor.setPersonID(instructorbll.getList().get(selectedRow).getPersonID());
        tbInstructor.setEnabled(false);
        btAdd.setEnabled(false);
        btDelete.setEnabled(false);
        btSearch.setEnabled(false);
        btAll.setEnabled(false);
        btSave.setVisible(true);
        btCancel.setVisible(true);
    }//GEN-LAST:event_btEditActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        tbInstructor.setEnabled(true);
        btAdd.setEnabled(true);
        btDelete.setEnabled(true);
        btSearch.setEnabled(true);
        btAll.setEnabled(true);
        btSave.setVisible(false);
        btCancel.setVisible(false);
    }//GEN-LAST:event_btCancelActionPerformed

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        try {
            if (!Validate()) {
                return;
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
        if (instructorbll.getList().size() > 0) {
            CourseInstructorDTO p = new CourseInstructorDTO();

            p.setCourseID(Integer.parseInt(txCourseID.getText()));
            p.setPersonID(Integer.parseInt(txPersonID.getText()));

            try {
                instructorbll.Edit(p, oldInstructor);
            } catch (Exception ex) {
                System.out.println(ex);
            }

            modelInstructor.setValueAt(p.getCourseID(), selectedRow, 0);
            modelInstructor.setValueAt(p.getPersonID(), selectedRow, 1);

            tbInstructor.setModel(modelInstructor);
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void btPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPersonActionPerformed
        LecturerSelector sel = new LecturerSelector();
        try {
            sel.List();
        } catch (Exception ex) {
            System.out.println(ex);
        }
        sel.setVisible(true);
    }//GEN-LAST:event_btPersonActionPerformed

    private void tbInstructorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbInstructorMouseClicked
        selectedRow = tbInstructor.getSelectedRow();
        if (instructorbll.getList().size() > 0) {
            CourseInstructorDTO p = new CourseInstructorDTO();
            if (listSearch.size() > 0) {
                p = listSearch.get(selectedRow);
            } else {
                p = instructorbll.getList().get(selectedRow);
            }

            txCourseID.setText(String.valueOf(p.getCourseID()));
            txPersonID.setText(String.valueOf(p.getPersonID()));
        }
    }//GEN-LAST:event_tbInstructorMouseClicked

    private void btOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOnlineActionPerformed
        OnlineCourseSelector sel = new OnlineCourseSelector();
        try {
            sel.List();
        } catch (Exception ex) {
            System.out.println(ex);
        }
        sel.setVisible(true);
    }//GEN-LAST:event_btOnlineActionPerformed

    private void btOnsiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOnsiteActionPerformed
        OnsiteCourseSelector sel = new OnsiteCourseSelector();
        try {
            sel.List();
        } catch (Exception ex) {
            System.out.println(ex);
        }
        sel.setVisible(true);
    }//GEN-LAST:event_btOnsiteActionPerformed

    public static void setPersonID(String id) {
        txPersonID.setText(id);
    }

    public static void setOnlineCourseID(String id) {
        txCourseID.setText(id);
    }

    public static void setOnsiteCourseID(String id) {
        txCourseID.setText(id);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageInstructor QLD = new ManageInstructor();
                try {
                    QLD.List();
                } catch (Exception ex) {
                    System.out.println(ex);
                }
                QLD.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btAll;
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btClose;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btNew;
    private javax.swing.JButton btOnline;
    private javax.swing.JButton btOnsite;
    private javax.swing.JButton btPerson;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbInstructor;
    private static javax.swing.JTextField txCourseID;
    private static javax.swing.JTextField txPersonID;
    // End of variables declaration//GEN-END:variables
}
